[inputs]
;input pins to which the control components are connected

;whether to invert the logic of the button pins (including scene input line);
;Set to True if the buttons are connected to the 3.3V source. The pins will be
;configured to use internal pull-down resistors, and high voltage will be
;interpreted as a button press.  Set to False if the buttons are connected to
;ground. The pins will be configured to use internal pull-down resistors, and
;low voltage will be interpreted as a button press.
invert_logic: True

;play button
pin_play: 4

;stop button
pin_stop: 17

;rewind button
pin_rw: 18

;fast forward button
pin_ff: 23

;scene input line
pin_scene: 25

;toggle to enable/disable scene input
pin_scene_toggle: 24

;time to mask events for debouncing, in ms
db_time: 10


[lcd]
;lcd-related setting

;pins for the LCD's LED backlights
pin_red: 10
pin_green: 9
pin_blue: 11

;;colors for different states, expressed as 3-bit bitmasks to turn on the
;;different backlight LEDs. Bit 2 (most-significant) is red, bit 1 is green, bit
;;0 is blue.

;color when scene button is down (e.g. being tapped)
;6 = 0b110 = yellow
color_scene_tap: 6

;color when playing
;2 = 0b010 = green
color_playing: 2

;color when stopped in manual mode (not accepting scene button input)
;1 = 0b001 = blue
color_stop_manu: 1

;color when stopped in automatic mode (accepting scene button input)
;3 = 0b011 = green + blue = teal
color_stop_auto: 3

;color for errors with sound playback.  If in manual mode, this is when the
;scene button keeps getting pressed and the controller (the person in the sound
;trailer) has failed to hit play. If in automatic mode, this is wen the scene
;button keeps getting pressed after playing has started for a bit.
;4 = 0b100 = red
color_play_err: 4


[fs]
;filesystem-related configuration

;path to directory of music files
libdir: /root/music

;default file
def_file: 06_Stable.mp3


[prefs]
;user interface preferences

;maximum time somebody can hold a button down before we forget about the
;rising edge of the input (and then releasing the button no longer counts
;as a press)
;TODO?

;length of time (float seconds) which the fast-forward or rewind buttons must
;be help down to trigger a skip (alternative to pressing and releasing them)
skip_hold_time: 0.5

;number of seconds to skip forward/backward in the playing MP3 due to a
;fast-forward or rewind event
skip_len: 5

;timespan (seconds) in which the necessary number of released of the scene
;play button must be received in order to start playing
scp_span: 5

;number of releases of the scene play button which must occur within the
;specified time limit
scp_hits: 3

;amount of time (seconds) to give people at the scene to hear that the scene has
;started playing and stop hitting the scene button before we assume that
;something is wrong and start showing the error color on the LCD
scp_err_time: 4

;volume setting to play music at, specified as integer percentage
volume: 100

;name of the alsa channel whose volume is being controlled; this should not
;change unless the hardware changes (and even then, may not)
alsa_chan: PCM
